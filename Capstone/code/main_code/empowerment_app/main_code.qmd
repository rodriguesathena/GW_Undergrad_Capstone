---
title: "main_code"
format: html
editor: visual
---

<!-- installing libraries -->

```{r, message=FALSE, warning=FALSE}
library(readr)
library(dplyr)
library(tidyr)
library(extrafont)
library(ggplot2)
library(grid)
library(maps)
library(plotly)
library(tidyverse)
library(gganimate)
library(scales)
library(Cairo)
library(gridExtra)
library(vdemdata)
library(countrycode)
loadfonts(device = "win")
```

<!-- loading dataset -->

```{r, message=FALSE}
vdemfull <- vdemdata::vdem
onlycountries <- vdemfull[-c(25990:27555), ]

map <- map_data("world")
map$region[map$region == "USA"] = "United States of America"
map$region[map$region == "UK"] = "United Kingdom"
map$region[map$region == "Czech Republic"] = "Czechia"
map$region[map$region == "Myanmar"] = "Burma/Myanmar"
map$region[map$region == "Republic of Congo"] = "Republic of the Congo"

```

<!-- womens empowerment variables -->

```{r}
allwemp <- onlycountries %>% select(region = country_name, abbr = country_text_id, id = country_id, year = year, wpei = v2x_gender, liberties = v2x_gencl, society = v2x_gencs, participation = v2x_genpp)
wemp100yr <- filter(allwemp, year >= 1900, year <= 2000)
mapwemp100yr <- left_join(wemp100yr, map, by = "region")
```

<!-- voting rights -->

```{r}
allvoting <- onlycountries %>% select(region = country_name, abbr = country_text_id, id = country_id, year = year, voting = v2fsuffrage)
voting100yr <- filter(allvoting, year >1899, year <2001)
voting100yr <- voting100yr %>%
  mutate(continent = countrycode(as.character(abbr), "wb", "continent"))
```

<!-- category breakup -->

```{r}
quantiles <- quantile(wemp100yr$wpei, probs = c(1/4, 2/4, 3/4), na.rm = TRUE)
quantiles
wemp100yr[, 'category'] = NA 
wemp100yr[, 'categoryvalue'] = NA
# categories nascent: wpei<0.188; emerging: 0.188<wpei<0.336; developing: 0.336<wpei<0.546    established: wpei>.546
wemp100yr$category <- as.factor(ifelse(wemp100yr$wpei<=0.188, 'nascent',
                                  ifelse(wemp100yr$wpei>=0.188 & wemp100yr$wpei<=0.336, 'emerging',
                                    ifelse(wemp100yr$wpei>=0.336 & wemp100yr$wpei<=0.546, 'developing',
                                    ifelse(wemp100yr$wpei>=0.546, 'established', 'none')))))
wemp100yr$categoryvalue <- as.numeric(ifelse(wemp100yr$wpei<=0.188, 1,
                                    ifelse(wemp100yr$wpei>=0.188 & wemp100yr$wpei<=0.336, 2,
                                    ifelse(wemp100yr$wpei>=0.336 & wemp100yr$wpei<=0.546, 3,
                                    ifelse(wemp100yr$wpei>=0.546, 4, 0)))))
summary(wemp100yr)
```

<!-- Correlation between indicators and categories --->

```{r}
wemp100yr <- wemp100yr %>%
  mutate(wpei_category = case_when(
    wpei < 0.188 ~ 'nascent',
    wpei >= 0.188 & wpei <= 0.336 ~ 'emerging',
    wpei > 0.336 & wpei <= 0.546 ~ 'developing',
    wpei > 0.546 ~ 'established'
  )) %>%
  filter(!is.na(wpei_category))

category_correlations <- wemp100yr %>%
  group_by(wpei_category) %>%
  summarise(
    society_liberties_corr = ifelse(n() > 1, cor(society, liberties, use = "complete.obs"), NA),
    society_participation_corr = ifelse(n() > 1, cor(society, participation, use = "complete.obs"), NA),
    liberties_participation_corr = ifelse(n() > 1, cor(liberties, participation, use = "complete.obs"), NA)
  ) %>%
  ungroup()
print(category_correlations)
```

<!-- finding transition periods -->

```{r message=FALSE, warning=FALSE}
#grouping for analysis
grouped_wemp <- wemp100yr %>%
  group_by(year, category) %>%
  summarise(count = n(), .groups = 'drop')
grouped_wemp <- drop_na(grouped_wemp)
#GRAPH VISUAL
# grouppoint <- ggplot(grouped_wemp) + geom_point(aes(x = year, y = count, color = category)) + scale_fill_manual(values = c(
#     "nascent" = "#f2ab9b", 
#     "developing" = "#3b5e8c", 
#     "emerging" = "#f2b872", 
#     "established" = "#957DAD"
#   ))
# grouppoint <- ggplotly(grouppoint)
# grouppoint
allbar <- ggplot(grouped_wemp, aes(x = year, y = count, fill = category)) + geom_bar(stat='identity', position=position_dodge()) +   scale_fill_manual(values = c(
    "nascent" = "#f2ab9b", 
    "developing" = "#3b5e8c", 
    "emerging" = "#f2b872", 
    "established" = "#957DAD"
  )) + theme_minimal(base_family = "Garamond") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
facetbar <- ggplot(grouped_wemp, aes(x = year, y = count, fill = category)) + geom_bar(stat='identity', position=position_dodge()) +   scale_fill_manual(values = c(
    "nascent" = "#f2ab9b", 
    "developing" = "#3b5e8c", 
    "emerging" = "#f2b872", 
    "established" = "#957DAD"
  )) + facet_wrap(.~category) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
allbarinter <- ggplotly(allbar)
facetbar <- ggplotly(facetbar)
allbar
facetbar
ggsave("periods.png", plot = allbar, device = "png", width = 10, height = 8, units = "in")
```
<!-- Threshold Analysis -->
```{r warning=FALSE}
#THRESHOLD CALCULATION
category_summary <- wemp100yr %>%
  group_by(category, year) %>%
  summarise(categoryvalue = sum(categoryvalue), .groups = 'drop')
max_years <- category_summary %>%
  group_by(category) %>%
  summarise(max_value = max(categoryvalue), .groups = 'drop')
thresholds <- c(0.9, 0.8, 0.75)
calculate_main_years_range <- function(threshold) {
  category_summary %>%
    inner_join(max_years, by = "category") %>%
    group_by(category) %>%
    filter(categoryvalue >= max_value * threshold) %>%
    summarise(StartYear = min(year), EndYear = max(year), .groups = 'drop')
}
results <- lapply(thresholds, calculate_main_years_range)
percent_labels <- paste0(thresholds * 100, "%")
combined_results <- bind_rows(results, .id = "Threshold") %>%
  mutate(Threshold = factor(Threshold, labels = percent_labels))
table_plot <- gridExtra::tableGrob(combined_results)

# Display the table plot in R (for verification)
grid::grid.newpage()
grid::grid.draw(table_plot)
```

<!-- adding transition periods to dataset-->

```{r}
#periods: nascent 1900 - 1955   developing - 1956 - 1978     established 1979 - 2000
periods <- filter(allwemp, year >= 1900, year <= 2000)
periods[, 'category'] = NA 
periods[, 'categoryvalue'] = NA

periods$category <- as.factor(ifelse(periods$year>=1900 & periods$year<=1955, 'nascent',
                                  ifelse(periods$year>=1956 & periods$year<=1978, 'developing',
                                    ifelse(periods$year>=1979, 'established', 'none'))))
periods$categoryvalue <- as.numeric(ifelse(periods$year>=1900 & periods$year<=1955, 1,
                                  ifelse(periods$year>=1956 & periods$year<=1978, 2,
                                    ifelse(periods$year>=1979, 3, 0))))
```

<!-- filtering data to compare voting rights and transition periods -->

```{r, warning=FALSE, message=FALSE}
combined <- merge(voting100yr, wemp100yr, by = c("id", "year", "abbr", "region"), all.x = TRUE)
combined <-  combined %>%
    replace_na(list(voting = 0, category = "nascent", categoryvalue = 0))
combined$voting <- as.numeric((as.character(combined$voting)))
combined$voting <- ifelse(combined$voting > 0, 1, 0)
combined <- combined %>%
  mutate(change_point = ifelse(voting == 1, "Change", "No Change"))
combined <- combined %>%
  mutate(continent = countrycode(as.character(abbr), "wb", "continent"))
votechange <- combined %>%
    arrange(region, year) %>%
    group_by(region) %>%
    mutate(change = voting != lag(voting, default = first(voting))) %>%
    filter(change)
all <- unique(voting100yr$region)
change <- unique(votechange$region)
missing <- setdiff(all, change)
votechange <- select(votechange, -change)
missingblank <- data.frame(region = missing,
                      year = NA,
                      voting = NA,
                      category = NA,
                      categoryvalue = NA)
missinginfo <- combined %>%
    filter(region %in% missing) %>%
    group_by(region) %>%
    summarise(year=min(year), abbr = first(abbr), id = first(id), voting = first(voting), category = first(category), categoryvalue = first(categoryvalue), .groups = 'drop') %>%
    mutate(change_point = "No Change")
analysis <- bind_rows(votechange, missinginfo)
analysis$continent <- countrycode(analysis$abbr, "wb", "continent")

groupedanalysis <- analysis %>%
  group_by(region, change_point) %>%
  summarise(count = n(), .groups = 'drop')
groupedanalysis <- drop_na(groupedanalysis)
changesgrouped <- filter(groupedanalysis, change_point =="Change")
#checking all countries present
# original_countries <- unique(voting100yr$region)
# full_dataset_countries <- unique(combined$region)
# all_countries_present <- all(original_countries %in% full_dataset_countries)
#print(all_countries_present)
combined_map <- left_join(combined, map, by = "region")
analysis_map <- left_join(analysis, map, by = "region")
```

<!-- continent breakdown -->

```{r}
Americas <- filter(analysis_map, continent == "Americas")
Europe <- filter(analysis_map, continent == "Europe")
Asia <- filter(analysis_map, continent == "Asia")
Africa <- filter(analysis_map, continent == "Africa")
Oceania <- filter(analysis_map, continent == "Oceania")

```

<!-- WPEI Average graphs -->

```{r}
# #finding averages
# avg_wpei_region <- wemp100yr %>%
#     group_by(region) %>%
#     summarise(avg_wpei = mean(wpei, na.rm = TRUE))
# summary(avg_wpei_region)
# avg_wpei_year <- wemp100yr %>%
#     group_by(year) %>%
#     summarise(avg_wpei = mean(wpei, na.rm = TRUE))
# summary(avg_wpei_year)
# 
# #top ten years table
# top_ten_years <- avg_wpei_year %>%
#   arrange(desc(avg_wpei)) %>%
#   slice_head(n = 10)
# top_ten_years$year <- factor(top_ten_years$year, levels = top_ten_years$year)
# head(top_ten_years)
# #top ten countries table
# top_ten_region <- avg_wpei_region %>%
#   arrange(desc(avg_wpei)) %>%
#   slice_head(n = 10)
# head(top_ten_region)
```

<!-- Voting and WPEI Decade Analysis -->

```{r}
combined$year <- as.integer(combined$year)
combined$decade <- floor(combined$year / 10) * 10

#VOTE
first_voting_instances <- combined %>%
  dplyr::filter(voting == 1) %>%
  group_by(region) %>%
  summarize(first_vote_year = min(year)) %>%
  ungroup()
first_voting_instances$decade <- floor(first_voting_instances$first_vote_year / 10) * 10
votes_by_decade <- first_voting_instances %>%
  dplyr::count(decade)
print(votes_by_decade)
#GRAPH
ggplot(votes_by_decade, aes(x = as.factor(decade), y = n)) +
  geom_bar(stat = "identity", fill = "#806E88") +
  coord_flip() +
  theme_minimal(base_size = 14) +
  theme(
    legend.position = "none",
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.title.x = element_text(size = 16, margin = margin(t = 20)),
    axis.title.y = element_text(size = 16, margin = margin(r = 20))
  ) +
  labs(title = "First Instances of Women's Suffrage by Decade",
       x = "Decade",
       y = "Countries") +
  scale_x_discrete(labels = function(x) paste0(x, "s"))
#LEVELS
grouped_combined <- combined %>%
  group_by(decade, category) %>%
  summarise(count = n_distinct(region), .groups = 'drop')
#GRAPH
colorgraph <- ggplot(grouped_combined, aes(x = as.factor(decade), y = count, fill = category)) +
  geom_bar(stat = "identity", position = "stack") +
  coord_flip() +
  theme_minimal(base_size = 14) +
  theme(
    legend.position = "bottom",
    legend.text = element_text(size = 12),
    legend.title = element_text(size = 14),
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.title.x = element_text(size = 16, margin = margin(t = 20)),
    axis.title.y = element_text(size = 16, margin = margin(r = 20))
  ) +
  scale_fill_manual(values = c(
    "nascent" = "#f2ab9b", 
    "developing" = "#3b5e8c", 
    "emerging" = "#f2b872", 
    "established" = "#957DAD"
  )) +
  labs(title = "Empowerment Variables by Decade",
       x = "Decade",
       y = "Number of Countries") +
  scale_x_discrete(labels = function(x) paste0(x, "s")) +
  facet_wrap(~category)
intercolor <- ggplotly(colorgraph)
intercolor
```

<!-- voting analysis -->

```{r, warning = FALSE}
grouped_vote <- voting100yr %>%
  group_by(year, continent) %>%
  summarise(voting = mean(voting, na.rm = TRUE),
            .groups = "drop")
grouped_vote <- drop_na(grouped_vote)
max_voting <- max(grouped_vote$voting, na.rm = TRUE)

nascent_grob <- textGrob("Nascent", x = unit(0.25, "npc"), y = unit(1.1, "npc"), 
                         gp = gpar(col = "black", fontsize = 12, fontfamily = "Garamond"))
developing_grob <- textGrob("Developing", x = unit(0.5, "npc"), y = unit(1.1, "npc"), 
                            gp = gpar(col = "black", fontsize = 12, fontfamily = "Garamond"))
established_grob <- textGrob("Established", x = unit(0.75, "npc"), y = unit(1.1, "npc"), 
                             gp = gpar(col = "black", fontsize = 12, fontfamily = "Garamond"))

continent_vote <- ggplot(grouped_vote, aes(x = year, y = voting, group = continent, color = continent)) +
  geom_line(size = 1.2) +  
  geom_point() +  
  annotate("rect", xmin = 1900, xmax = 1955, ymin = -Inf, ymax = Inf, fill = "gray", alpha = 0.2) +
  annotate("rect", xmin = 1956, xmax = 1978, ymin = -Inf, ymax = Inf, fill = "gray", alpha = 0.2) +
  annotate("rect", xmin = 1979, xmax = 2000, ymin = -Inf, ymax = Inf, fill = "gray", alpha = 0.2) +
  annotation_custom(nascent_grob, xmin = 1900, xmax = 1955, ymin = 100, ymax = 120) + 
  annotation_custom(developing_grob, xmin = 1956, xmax = 1978, ymin = 100, ymax = 120) +
  annotation_custom(established_grob, xmin = 1979, xmax = 2000, ymin = 100, ymax = 120) +
  scale_x_continuous(breaks = seq(min(grouped_vote$year), max(grouped_vote$year), by = 10)) +
  scale_color_manual(values = c("Africa" = "#A7C7E7", 
                                "Americas" = "#E7A7A7", 
                                "Asia" = "#A7E7D6", 
                                "Europe" = "#D6A7E7",
                                "Oceania" = "#E7D5A7", 
                                "NA" = "#D3D3D3")) +
  labs(title = "Average Voting Rate by Continent Over Time",
       x = "Year",
       y = "Average Voting Rate") +
  theme_minimal(base_family = "Garamond") +
  theme(text = element_text(family = "Garamond"),
        legend.position = "right") +
  coord_cartesian(ylim = c(0, 150)) 
continent_vote
#ggsave("continent_vote.png", plot = continent_vote, device = "png", width = 10, height = 8, units = "in")
```

<!-- maps -->

```{r}
allworld20 <- ggplot() +
  geom_polygon(data = combined_map %>% filter(year == 1920), 
               aes(x = long, y = lat, group = group, fill = category)) +
  scale_fill_manual(values = c("nascent" = "#f2ab9b", "developing" = "#3b5e8c", "emerging" = "#f2b872", "established" = "#957DAD")) +
  geom_polygon(data = combined_map %>% filter(year == 1920, voting == 1), 
               aes(x = long, y = lat, group = group, color = "Voting Rights"), 
               fill = NA, size = 0.25) +
  geom_polygon(data = combined_map %>% filter(year == 1920, voting == 0), 
               aes(x = long, y = lat, group = group, color = "No Voting Rights"), 
               fill = NA, size = 0.25, linetype = "dashed") +
  scale_color_manual(name = "Voting Rights",
                     values = c("Voting Rights" = "black", "No Voting Rights" = "red"),
                     labels = c("Voting Rights", "No Voting Rights"),
                     guide = guide_legend(override.aes = list(linetype = c("solid", "dashed"), size = 1))) +
  theme_void(base_family = "Garamond") +
  labs(title = "Empowerment and Voting Rights in 1920", fill = "Category") +
  guides(fill = guide_legend(title = "Category"),
         color = guide_legend(title = "Voting Rights Status"))
allworld20
ggsave("1920world.png", plot = allworld20, device = "png", width = 10, height = 8, units = "in")

allworld90 <- ggplot() +
  geom_polygon(data = combined_map %>% filter(year == 1990), 
               aes(x = long, y = lat, group = group, fill = category)) +
  scale_fill_manual(values = c("nascent" = "#f2ab9b", "developing" = "#3b5e8c", "emerging" = "#f2b872", "established" = "#957DAD")) +
  geom_polygon(data = combined_map %>% filter(year == 1990, voting == 1), 
               aes(x = long, y = lat, group = group, color = "Voting Rights"), 
               fill = NA, size = 0.25) +
  geom_polygon(data = combined_map %>% filter(year == 1990, voting == 0), 
               aes(x = long, y = lat, group = group, color = "No Voting Rights"), 
               fill = NA, size = 0.25, linetype = "dashed") +
  scale_color_manual(name = "Voting Rights",
                     values = c("Voting Rights" = "black", "No Voting Rights" = "red"),
                     labels = c("Voting Rights", "No Voting Rights"),
                     guide = guide_legend(override.aes = list(linetype = c("solid", "dashed"), size = 1))) +
  theme_void(base_family = "Garamond") +
  labs(title = "Empowerment and Voting Rights in 1990", fill = "Category") +
  guides(fill = guide_legend(title = "Category"),
         color = guide_legend(title = "Voting Rights Status"))
allworld90
ggsave("1990.world.png", plot = allworld90, device = "png", width = 10, height = 8, units = "in")

allcontinents <- ggplot() +
  geom_polygon(data = combined_map %>% filter(year == 1920, continent == "Europe"), 
               aes(x = long, y = lat, group = group, fill = category)) +
  geom_polygon(data = combined_map %>% filter(year == 1920, continent == "Europe", voting == 1), 
               aes(x = long, y = lat, group = group, color = "Voting Rights"), 
               fill = NA, size = 0.25) +
  geom_polygon(data = combined_map %>% filter(year == 1920, voting == 0, continent == "Europe"), 
               aes(x = long, y = lat, group = group, color = "No Voting Rights"), 
               fill = NA, size = 0.25, linetype = "dashed") +
  scale_fill_manual(values = c("nascent" = "#f2ab9b", "developing" = "#3b5e8c", "emerging" = "#f2b872", "established" = "#957DAD"))+
  scale_color_manual(name = "Voting Rights",
                     values = c("Voting Rights" = "black", "No Voting Rights" = "red"),
                     labels = c("Voting Rights", "No Voting Rights"),
                     guide = guide_legend(override.aes = list(linetype = c("solid", "dashed"), size = 1))) +
  theme_classic() +
  labs(title = "Empowerment and Voting Rights in 1920", fill = "Category") +
  guides(fill = guide_legend(title = "Category"),
         color = guide_legend(title = "Voting Rights Status"))
allcontinents
categoriescontinents <- ggplot(data = combined_map %>% filter(continent == "Africa") %>% filter(year == 1996), aes (x = long, y = lat, group = group, fill = category)) + geom_polygon() + theme_classic() +labs(title = "Empowerment Category", fill="category")
categoriescontinents
votingcontinents <- ggplot(data = combined_map %>% filter(continent == "Africa") %>% filter(year == 1996), aes (x = long, y = lat, group = group, fill = voting)) + geom_polygon() + theme_classic() +labs(title = "Empowerment Category", fill="vote")
votingcontinents
categoriesworld <- ggplot(data = combined_map %>% filter(year == 2000), aes (x = long, y = lat, group = group, fill = category)) + geom_polygon() + theme_classic() +labs(title = "Empowerment Category", fill="category")
categoriesworld

categoriescontinents <- ggplot(data = combined_map %>% filter(continent == "Africa") %>% filter(year == 1996), aes (x = long, y = lat, group = group, fill = category)) + geom_polygon() + theme_classic() +labs(title = "Empowerment Category", fill="category")
categoriescontinents

votingworld <- ggplot(data = combined_map %>% filter(year == 1905), aes(x = long, y = lat, group = group, fill = factor(voting))) + 
  geom_polygon() + 
  theme_classic() +
  labs(title = "Voting in 1996", fill="Voting Status") +
  scale_fill_manual(values = c("0" = "black", "1" = "#806E88"),
                    labels = c("0" = "No Voting", "1" = "Voting")) +
  theme(legend.position = "right")
votingworld

empowermentcountry <- ggplot(data = combined_map %>% filter(year == 1912, region == "France"), aes(x = long, y = lat, group = group, fill = category)) +
  geom_polygon() + 
  geom_polygon(data = combined_map %>% filter(year == 1912, region == "France", voting == 1), aes(color = "Yes"), fill = NA, size = 0.25, linetype = "dashed") +
  geom_polygon(data = combined_map %>% filter(year == 1912, region == "France", voting == 0), aes(color = "No"), fill = NA, size = 0.25) +
  scale_fill_manual(values = c("nascent" = "#f2ab9b", "developing" = "#3b5e8c", "emerging" = "#f2b872", "established" = "#957DAD")) +
  scale_color_manual(values = c("Yes" = "black", "No" = "red")) +
  theme_void() +
  labs(title = "Empowerment Category in France, 1990", fill = "Category")
empowermentcountry

```

<!-- animated wpei gif -->

```{r}
library(ggplot2)
library(maps)
library(dplyr)
library(animation)

years_data <- list(
  wemp1900 = filter(mapwemp100yr, year == 1900),
  wemp1925 = filter(mapwemp100yr, year == 1925),
  wemp1950 = filter(mapwemp100yr, year == 1950),
  wemp1975 = filter(mapwemp100yr, year == 1975),
  wemp2000 = filter(mapwemp100yr, year == 2000)
)
map_data <- map_data("world")
basemap <- ggplot() + 
  geom_polygon(data = map_data, aes(x = long, y = lat, group = group), fill = "gray", color = "white")
plot_map_for_year <- function(year_data) {
  basemap +
    geom_polygon(data = year_data, aes(x = long, y = lat, fill = wpei, group = group), color = "white") +
    scale_fill_gradient(low = "#FFCC99", high = "#CC6600", name = "WPEI") +
    labs(title = paste("Year:", unique(year_data$year))) +
    theme_void()
}
liberties_map <- function(year_data) {
  basemap +
    geom_polygon(data = year_data, aes(x = long, y = lat, fill = liberties, group = group), color = "white") +
    scale_fill_gradient(low = "#90EE90", high = "#006400", name = "WCLI") +
    labs(title = paste("Year:", unique(year_data$year))) +
    theme_void()
}
society_map <- function(year_data) {
  basemap +
    geom_polygon(data = year_data, aes(x = long, y = lat, fill = society, group = group), color = "white") +
    scale_fill_gradient(low = "#D8BFD8", high = "#4B0082", name = "WCSPI") +
    labs(title = paste("Year:", unique(year_data$year))) +
    theme_void()
}
participation_map <- function(year_data) {
  basemap +
    geom_polygon(data = year_data, aes(x = long, y = lat, fill = society, group = group), color = "white") +
    scale_fill_gradient(low = "#ADD8E6", high = "#00008B", name = "WPPI") +
    labs(title = paste("Year:", unique(year_data$year))) +
    theme_void()
}

# 
# saveGIF({
#   for(year_data in years_data) {
#     print(participation_map(year_data))
#   }
# }, movie.name = "participation_animation.gif", interval = 2, ani.width = 800, ani.height = 600)

```

<!-- animated empowerment levels gif -->

<!-- creating a csv file of cleaned data -->

```{r}
# write_csv(wemp100yr, 'wemp100yr.csv')
# write_csv(voting100yr, 'voting100yr.csv')
# write_csv(analysis_map, 'analysis_map.csv')
# write_csv(combined_map, 'combined_map.csv')
#write_csv(combined, 'combined.csv')
#write_csv(grouped_vote, 'grouped_vote.csv')
#write_csv(grouped_wemp, 'grouped_wemp.csv')
```
