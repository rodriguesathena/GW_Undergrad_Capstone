---
title: "main_code"
format: html
editor: visual
---

<!-- installing libraries -->

```{r, message=FALSE, warning=FALSE}
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(maps)
library(plotly)
library(tidyverse)
library(leaflet)
library(vdemdata)
library(countrycode)
```

<!-- loading dataset -->

```{r, message=FALSE}
vdemfull <- vdemdata::vdem
onlycountries <- vdemfull[-c(25990:27555), ]

map <- map_data("world")
map$region[map$region == "USA"] = "United States of America"
map$region[map$region == "UK"] = "United Kingdom"
map$region[map$region == "Czech Republic"] = "Czechia"
map$region[map$region == "Myanmar"] = "Burma/Myanmar"
map$region[map$region == "Republic of Congo"] = "Republic of the Congo"

```

<!-- womens empowerment variables -->

```{r}
allwemp <- onlycountries %>% select(region = country_name, abbr = country_text_id, id = country_id, year = year, wpei = v2x_gender, liberties = v2x_gencl, society = v2x_gencs, participation = v2x_genpp)
wemp100yr <- filter(allwemp, year >= 1900, year <= 2000)
```

<!-- voting rights -->

```{r}
allvoting <- onlycountries %>% select(region = country_name, abbr = country_text_id, id = country_id, year = year, voting = v2fsuffrage)
voting100yr <- filter(allvoting, year >1899, year <2001)
```

<!-- creating a csv file of cleaned data -->

```{r}
#write.csv(wemp100yr, 'wemp100yr.csv')
#write.csv(voting100yr, 'voting100yr.csv')
```

<!-- category breakup -->

```{r}
wemp100yr[, 'category'] = NA 
wemp100yr[, 'categoryvalue'] = NA
# categories nascent: wpei<0.188; emerging: 0.188<wpei<0.336; developing: 0.336<wpei<0.546    established: wpei>.546
wemp100yr$category <- as.factor(ifelse(wemp100yr$wpei<0.188, 'nascent',
                                  ifelse(wemp100yr$wpei>0.188 & wemp100yr$wpei<0.336, 'emerging',
                                    ifelse(wemp100yr$wpei>0.336 & wemp100yr$wpei<0.546, 'developing',
                                    ifelse(wemp100yr$wpei>0.546, 'established', 'none')))))
wemp100yr$categoryvalue <- as.numeric(ifelse(wemp100yr$wpei<0.188, 1,
                                    ifelse(wemp100yr$wpei>0.188 & wemp100yr$wpei<0.336, 2,
                                    ifelse(wemp100yr$wpei>0.336 & wemp100yr$wpei<0.546, 3,
                                    ifelse(wemp100yr$wpei>0.546, 4, 0)))))
summary(wemp100yr)

```

<!-- finding transition periods -->

```{r message=FALSE, warning=FALSE}
#grouping for analysis
grouped_wemp <- wemp100yr %>%
  group_by(year, category) %>%
  summarise(count = n(), .groups = 'drop')
grouped_wemp <- drop_na(grouped_wemp)
#visualizations to determine transitions
grouppoint <- ggplot(grouped_wemp) + geom_point(aes(x = year, y = count, color = category)) 
groupbar <- ggplot(grouped_wemp, aes(x = year, y = count, fill = category)) + geom_bar(stat='identity', position=position_dodge()) #+ facet_wrap(.~category) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
groupbar <- ggplotly(groupbar)
grouppoint <- ggplotly(grouppoint)
#periods: nascent 1900 - 1955   developing - 1956 - 1978     established 1979 - 2000
```

<!-- adding transition periods to dataset-->

```{r}
periods <- filter(allwemp, year >= 1900, year <= 2000)
periods[, 'category'] = NA 
periods[, 'categoryvalue'] = NA

periods$category <- as.factor(ifelse(periods$year>=1900 & periods$year<=1955, 'nascent',
                                  ifelse(periods$year>=1956 & periods$year<=1978, 'developing',
                                    ifelse(periods$year>=1979, 'established', 'none'))))
periods$categoryvalue <- as.numeric(ifelse(periods$year>=1900 & periods$year<=1954, 1,
                                  ifelse(periods$year>=1955 & periods$year<=1978, 2,
                                    ifelse(periods$year>=1979, 3, 0))))
```

<!-- filtering data to compare voting rights and transition periods -->

```{r, warning=FALSE, message=FALSE}
combined <- voting100yr
combined[, 'category'] = NA 
combined[, 'categoryvalue'] = NA
combined[, 'wpei'] = NA
combined$category <- wemp100yr$category
combined$categoryvalue <- wemp100yr$categoryvalue
combined$wpei <- wemp100yr$wpei
combined <-  combined %>%
    replace_na(list(voting = 0, category = "nascent", categoryvalue = 0))
combined$voting <- as.numeric((as.character(combined$voting)))
combined$voting <- ifelse(combined$voting > 0, 1, 0)
combined <- combined %>%
  mutate(change_point = ifelse(voting == 1, "Change", "No Change"))
combined$continent <- countrycode(combined$abbr, "wb", "continent")
votechange <- combined %>%
    arrange(region, year) %>%
    group_by(region) %>%
    mutate(change = voting != lag(voting, default = first(voting))) %>%
    filter(change)
all <- unique(voting100yr$region)
change <- unique(votechange$region)
missing <- setdiff(all, change)
votechange <- select(votechange, -change)
missingblank <- data.frame(region = missing,
                      year = NA,
                      voting = NA,
                      category = NA,
                      categoryvalue = NA)
missinginfo <- combined %>%
    filter(region %in% missing) %>%
    group_by(region) %>%
    summarise(year=min(year), abbr = first(abbr), id = first(id), voting = first(voting), category = first(category), categoryvalue = first(categoryvalue), .groups = 'drop') %>%
    mutate(change_point = "No Change")
analysis <- bind_rows(votechange, missinginfo)
analysis$continent <- countrycode(analysis$abbr, "wb", "continent")

groupedanalysis <- analysis %>%
  group_by(region, change_point) %>%
  summarise(count = n(), .groups = 'drop')
groupedanalysis <- drop_na(groupedanalysis)
changesgrouped <- filter(groupedanalysis, change_point =="Change")
#checking all countries present
# original_countries <- unique(voting100yr$region)
# full_dataset_countries <- unique(combined$region)
# all_countries_present <- all(original_countries %in% full_dataset_countries)
#print(all_countries_present)
combined_map <- left_join(combined, map, by = "region")
analysis_map <- left_join(analysis, map, by = "region")
#write.csv(analysis_map, 'analysis_map.csv')
#write.csv(combined_map, 'combined_map.csv')
```

<!-- continent breakdown -->
```{r}
Americas <- filter(analysis_map, continent == "Americas")
Europe <- filter(analysis_map, continent == "Europe")
Asia <- filter(analysis_map, continent == "Asia")
Africa <- filter(analysis_map, continent == "Africa")
Oceania <- filter(analysis_map, continent == "Oceania")

```
<!-- WPEI Average graphs -->
```{r}
#finding averages
avg_wpei_region <- wemp100yr %>%
    group_by(region) %>%
    summarise(avg_wpei = mean(wpei, na.rm = TRUE))
summary(avg_wpei_region)
avg_wpei_year <- wemp100yr %>%
    group_by(year) %>%
    summarise(avg_wpei = mean(wpei, na.rm = TRUE))
summary(avg_wpei_year)

#top ten years table
top_ten_years <- avg_wpei_year %>%
  arrange(desc(avg_wpei)) %>%
  slice_head(n = 10)
top_ten_years$year <- factor(top_ten_years$year, levels = top_ten_years$year)
head(top_ten_years)
#top ten countries table
top_ten_region <- avg_wpei_region %>%
  arrange(desc(avg_wpei)) %>%
  slice_head(n = 10)
head(top_ten_region)
```
<!-- maps -->
```{r}
#Category Maps

categoriesworld <- ggplot(data = combined_map %>% filter(year == 2000), aes (x = long, y = lat, group = group, fill = category)) + geom_polygon() + theme_classic() +labs(title = "Empowerment Category", fill="category")
categoriesworld

categoriescontinents <- ggplot(data = combined_map %>% filter(continent == "Africa") %>% filter(year == 1996), aes (x = long, y = lat, group = group, fill = category)) + geom_polygon() + theme_classic() +labs(title = "Empowerment Category", fill="category")
categoriescontinents

votingworld <- ggplot(data = combined_map %>% filter(year == 1996), aes (x = long, y = lat, group = group, fill = voting)) + geom_polygon() + theme_classic() +labs(title = "Empowerment Category", fill="vote")
votingworld

votingcontinents <- ggplot(data = combined_map %>% filter(continent == "Africa") %>% filter(year == 1996), aes (x = long, y = lat, group = group, fill = voting)) + geom_polygon() + theme_classic() +labs(title = "Empowerment Category", fill="vote")
votingcontinents
```
