---
title: "main_code"
format: html
editor: visual
---
<!-- installing libraries -->

```{r, message=FALSE}
library(readr)
library(dplyr)
library(tidyr)
library(maps)
library(plotly )
library(tidyverse)
library(vdemdata)
library(ggplot2)
library(echarts4r)
```

<!-- loading dataset -->

```{r, message=FALSE}
vdemfull <- vdemdata::vdem
onlycountries <- vdemfull[-c(25990:27555), ]

map <- map_data("world")
map$region[map$region == "USA"] = "United States of America"
map$region[map$region == "UK"] = "United Kingdom"
map$region[map$region == "Czech Republic"] = "Czechia"
```

<!-- womens empowerment variables -->

```{r}
allwemp <- onlycountries %>% select(region = country_name, abbr = country_text_id, id = country_id, year = year, wpei = v2x_gender, liberties = v2x_gencl, society = v2x_gencs, participation = v2x_genpp)
wemp100yr <- filter(allwemp, year >= 1900, year <= 2000)
mapwemp100yr <- left_join(wemp100yr, map, by = "region")
```
<!-- voting rights -->

```{r}
allvoting <- onlycountries %>% select(region = country_name, abbr = country_text_id, id = country_id, year = year, voting = v2fsuffrage)
voting100yr <- filter(allvoting, year >1899, year <2001)
mapvoting100yr <- left_join(voting100yr, map, by = "region")
```

<!-- creating a csv file of cleaned data -->

```{r}
#write.csv(wemp100yr, 'wemp100yr.csv')
#write.csv(voting100yr, 'voting100yr.csv')
```

<!-- category breakup -->
```{r}
wemp100yr[, 'category'] = NA 
wemp100yr[, 'categoryvalue'] = NA
# categories nascent: wpei<0.188; emerging: 0.188<wpei<0.336; developing: 0.336<wpei<0.546    established: wpei>.546
wemp100yr$category <- as.factor(ifelse(wemp100yr$wpei<0.188, 'nascent',
                                  ifelse(wemp100yr$wpei>0.188 & wemp100yr$wpei<0.336, 'emerging',
                                    ifelse(wemp100yr$wpei>0.336 & wemp100yr$wpei<0.546, 'developing',
                                    ifelse(wemp100yr$wpei>0.546, 'established', 'none')))))
wemp100yr$categoryvalue <- as.numeric(ifelse(wemp100yr$wpei<0.188, 1,
                                    ifelse(wemp100yr$wpei>0.188 & wemp100yr$wpei<0.336, 2,
                                    ifelse(wemp100yr$wpei>0.336 & wemp100yr$wpei<0.546, 3,
                                    ifelse(wemp100yr$wpei>0.546, 4, 0)))))
summary(wemp100yr)

wempmap <- left_join(wemp100yr, map, by = "region")

```
<!-- category maps -->
```{r message=FALSE, warning=FALSE}
catwemp1900 <- filter(wempmap, year == 1900)
catwemp1925 <- filter(wempmap, year == 1925)
catwemp1950 <- filter(wempmap, year == 1950)
catwemp1975 <- filter(wempmap, year == 1975)
catwemp2000 <- filter(wempmap, year == 2000)
#basemap
basemap <- ggplot() + geom_map(data = map, map = map, aes(long, lat, map_id = region)) + scale_fill_gradient( low = "yellow", high = "red")
#1900 map
basemap + geom_map(data = catwemp1900, map = catwemp1900, aes(fill = categoryvalue, map_id = region))
#1925 map
basemap + geom_map(data = catwemp1925, map = catwemp1925, aes(fill = categoryvalue, map_id = region))
#1950 map
basemap + geom_map(data = catwemp1950, map = catwemp1950, aes(fill = categoryvalue, map_id = region))
#1975 map
basemap + geom_map(data = catwemp1975, map = catwemp1975, aes(fill = categoryvalue, map_id = region))
#2000 map
basemap + geom_map(data = catwemp2000, map = catwemp2000, aes(fill = categoryvalue, map_id = region))
```

<!-- finding transition periods -->
```{r message=FALSE, warning=FALSE}
#grouping for analysis
grouped_wemp <- wemp100yr %>%
  group_by(year, category) %>%
  summarise(count = n(), .groups = 'drop')
grouped_wemp <- drop_na(grouped_wemp)
#visualizations to determine transitions
grouppoint <- ggplot(grouped_wemp) + geom_point(aes(x = year, y = count, color = category)) 
groupbar <- ggplot(grouped_wemp, aes(x = year, y = count, fill = category)) + geom_bar(stat='identity', position=position_dodge()) #+ facet_wrap(.~category) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
groupbar_interactive <- ggplotly(groupbar)
grouppoint_interactive <- ggplotly(grouppoint)
groupbar_interactive
grouppoint_interactive
#periods: nascent 1900 - 1955   developing - 1956 - 1978     established 1979 - 2000
```
<!-- adding transition periods to dataset-->
```{r}
periods <- filter(allwemp, year >= 1900, year <= 2000)
periods[, 'category'] = NA 
periods[, 'categoryvalue'] = NA

periods$category <- as.factor(ifelse(periods$year>=1900 & periods$year<=1955, 'nascent',
                                  ifelse(periods$year>=1956 & periods$year<=1978, 'developing',
                                    ifelse(periods$year>=1979, 'established', 'none'))))
periods$categoryvalue <- as.numeric(ifelse(periods$year>=1900 & periods$year<=1954, 1,
                                  ifelse(periods$year>=1955 & periods$year<=1978, 2,
                                    ifelse(periods$year>=1979, 3, 0))))
```
<!-- voting rights and transition periods -->
```{r}
combined <- voting100yr
combined[, 'category'] = NA 
combined[, 'categoryvalue'] = NA
combined$category <- wemp100yr$category
combined$categoryvalue <- wemp100yr$categoryvalue
combined$voting <- ifelse(combined$voting > '0', 1, 0)
lastvote <- combined %>%
  arrange(region, year) %>%
  group_by(region) %>%
  mutate(change = voting != lag(voting, default = voting[1])) %>%
  filter(change) %>%
  mutate(pervious = lag(voting, default = voting[1])) %>%
  #filter(voting == 1 & previous == 0) %>%
  select(region, year, voting, category, categoryvalue)
# missing <- setdiff(unique(combined$region), unique(lastvote$region))
# naas <- data.frame(region = missing, year = 2000, voting = NA, category = NA, categoryvalue = NA)
```
<!-- potential mapping -->
```{r}
periods %>%
  group_by(year) %>%
  e_charts(region, timeline = TRUE) %>%
  e_map(wpei) %>%
  e_visual_map(min= 0, max= 1,
               type = 'piecewise') %>%
  e_title("wpei", left = "center") %>%
  e_tooltip(
    trigger = "item",
    formatter = e_tooltip_choro_formatter())
```

